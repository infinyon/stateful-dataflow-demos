{
  "openapi": "3.0.3",
  "info": {
    "title": "Stripe Event API for InfinyOn SDF",
    "version": "1.0.0"
  },
  "paths": {},
  "components": {
    "schemas": {
      "stripe_event": {
        "type": "object",
        "properties": {
          "fluvio_version": {
            "type": "string"
          },
          "api_version": {
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "created": {
            "format": "unix-time",
            "type": "integer"
          },
          "livemode": {
            "type": "boolean"
          },
          "pending_webhooks": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/event_data"
          }             
        },
        "required": [
          "fluvio_version",
          "created",
          "data",
          "id",
          "livemode",
          "pending_webhooks"
        ]        
      },
      "event_data": {
        "oneOf": [
          { "$ref": "#/components/schemas/invoice" },
          { "$ref": "#/components/schemas/invoiceitem" },
          { "$ref": "#/components/schemas/customer" },
          { "$ref": "#/components/schemas/payment_intent" },
          { "$ref": "#/components/schemas/subscription_schedule" },
          { "$ref": "#/components/schemas/issuing_cardholder" },
          { "$ref": "#/components/schemas/issuing_card" },
          { "$ref": "#/components/schemas/issuing_authorization" },
          { "$ref": "#/components/schemas/issuing_dispute" },
          { "$ref": "#/components/schemas/topup" }
        ]
      },
      "invoice": {
        "allOf": [
          { "$ref": "#/components/schemas/base_invoice" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "invoice.created",
                  "invoice.created",
                  "invoice.deleted",
                  "invoice.finalization_failed",
                  "invoice.finalized",
                  "invoice.marked_uncollectible",
                  "invoice.overdue",
                  "invoice.paid",
                  "invoice.payment_action_required",
                  "invoice.payment_failed",
                  "invoice.payment_succeeded",
                  "invoice.sent",
                  "invoice.upcoming",
                  "invoice.updated",
                  "invoice.voided",
                  "invoice.invoice.will_be_due"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },
      "invoiceitem": {
        "allOf": [
          { "$ref": "#/components/schemas/base_invoiceitem" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "invoiceitem.created",
                  "invoiceitem.deleted"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },      
      "customer": {
        "allOf": [
          { "$ref": "#/components/schemas/base_customer" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "customer.bank_account.created",
                  "customer.bank_account.deleted",
                  "customer.bank_account.updated",
                  "customer.card.created",
                  "customer.card.deleted",
                  "customer.card.updated",
                  "customer.created",
                  "customer.deleted",
                  "customer.subscription.created",
                  "customer.subscription.deleted",
                  "customer.subscription.paused",
                  "customer.subscription.pending_update_applied",
                  "customer.subscription.pending_update_expired",
                  "customer.subscription.resumed",
                  "customer.subscription.trial_will_end",
                  "customer.subscription.updated",
                  "customer.updated"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },
      "payment_intent": {
        "allOf": [
          { "$ref": "#/components/schemas/base_payment_intent" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "payment_intent.amount_capturable_updated",
                  "payment_intent.canceled",
                  "payment_intent.created",
                  "payment_intent.partially_funded",
                  "payment_intent.payment_failed",
                  "payment_intent.processing",
                  "payment_intent.requires_action",
                  "payment_intent.succeeded"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      }, 
      "subscription_schedule": {
        "allOf": [
          { "$ref": "#/components/schemas/base_subscription_schedule" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "subscription_schedule.aborted",
                  "subscription_schedule.canceled",
                  "subscription_schedule.completed",
                  "subscription_schedule.created",
                  "subscription_schedule.expiring",
                  "subscription_schedule.released",
                  "subscription_schedule.updated"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },
      "issuing_cardholder": {
        "allOf": [
          { "$ref": "#/components/schemas/base_issuing_cardholder" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "issuing_cardholder.created",
                  "issuing_cardholder.updated"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },
      "issuing_card": {
        "allOf": [
          { "$ref": "#/components/schemas/base_issuing_card" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "issuing_card.created",
                  "issuing_card.updated"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },
      "issuing_authorization": {
        "allOf": [
          { "$ref": "#/components/schemas/base_issuing_authorization" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "issuing_authorization.created",
                  "issuing_authorization.updated"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },      
      "issuing_dispute": {
        "allOf": [
          { "$ref": "#/components/schemas/base_issuing_dispute" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "issuing_dispute.created",
                  "issuing_dispute.closed",
                  "issuing_dispute.funds_reinstated",
                  "issuing_dispute.funds_rescinded",
                  "issuing_dispute.submitted",
                  "issuing_dispute.updated"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },
      "topup": {
        "allOf": [
          { "$ref": "#/components/schemas/base_topup" },
          {
            "type": "object",
            "properties": {
              "event_type": {
                "enum": [ 
                  "topup.canceled",
                  "topup.created",
                  "topup.failed",
                  "topup.reversed",
                  "topup.succeeded"
                ],
                "type": "string"
              }
            },
            "required": ["event_type"]  
          }
        ]
      },     
      "base_invoice": {
        "type": "object",
        "required": [
          "amount_due",
          "amount_paid",
          "amount_remaining",
          "amount_shipping",
          "attempt_count",
          "attempted",
          "collection_method",
          "created",
          "currency",
          "lines",
          "paid",
          "paid_out_of_band",
          "period_end",
          "period_start",
          "subtotal",
          "total"
        ],
        "properties": {
          "account_country": {
            "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
            "type": "string"
          },
          "account_name": {
            "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
            "type": "string"
          },                 
          "id": {
            "description": "Unique identifier for the invoice",
            "type": "string"
          },
          "customer": {
            "description": "The customer id.",
            "type": "string"
          },
          "customer_email": {
            "description": "The customer's email.",
            "type": "string"
          },
          "customer_name": {
            "description": "The customer's name.",
            "type": "string"
          },      
          "amount_due": {
            "description": "Final amount due for the invoice",
            "type": "integer"
          },
          "amount_paid": {
            "description": "Amount paid for the invoice",
            "type": "integer"
          },
          "amount_remaining": {
            "description": "Remaining amount for the invoice",
            "type": "integer"
          },
          "amount_shipping": {
            "description": "The sum of all the shipping amounts",
            "type": "integer"
          },
          "attempt_count": {
            "description": "Number of payment attempts made for this invoice",
            "type": "integer"
          },
          "attempted": {
            "description": "Whether an attempt has been made to pay the invoice",
            "type": "boolean"
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`",
            "type": "string",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ]
          },
          "created": {
            "description": "Timestamp when the invoice was created",
            "type": "integer",
            "format": "unix-time"
          },
          "currency": {
            "description": "Currency code for the invoice",
            "type": "string"
          },
          "lines": {
            "description": "The individual line items that make up the invoice",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/line_item"
            }
          },          
          "status": {
            "description": "The status of the invoice.",
            "enum": [
              "draft",
              "open",
              "paid",
              "uncollectible",
              "void"
            ],            
            "type": "string"
          },
          "hosted_invoice_url": {
            "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
            "nullable": true,
            "type": "string"
          },          
          "paid": {
            "description": "Whether payment was successfully collected for this invoice",
            "type": "boolean"
          },
          "paid_out_of_band": {
            "description": "Whether the invoice was manually marked paid",
            "type": "boolean"
          },
          "period_end": {
            "description": "End of the usage period for this invoice",
            "type": "integer",
            "format": "unix-time"
          },
          "period_start": {
            "description": "Start of the usage period for this invoice",
            "type": "integer",
            "format": "unix-time"
          },
          "subtotal": {
            "description": "Total before any discounts or taxes are applied",
            "type": "integer"
          },
          "total": {
            "description": "Total after discounts and taxes",
            "type": "integer"
          },
          "billing_reason": {
            "description": "Indicates the reason why the invoice was created.",
            "enum": [
              "automatic_pending_invoice_item_invoice",
              "manual",
              "quote_accept",
              "subscription",
              "subscription_create",
              "subscription_cycle",
              "subscription_threshold",
              "subscription_update",
              "upcoming"
            ],
            "type": "string"
          }          
        }
      },
      "base_invoiceitem": {
        "description": "Invoice Items represent the component lines of an invoice.",
        "properties": {
          "amount": {
            "description": "Amount (in the `currency` specified) of the invoice item.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code].",
            "format": "currency",
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer who will be billed when this invoice item is billed.",
            "type": "string"
          },
          "date": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An arbitrary string attached to the object.",
            "nullable": true,
            "type": "string"
          },          
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "period": {
            "$ref": "#/components/schemas/period"
          },
          "quantity": {
            "description": "Quantity of units for the invoice item.",
            "type": "integer"
          }        
        },
        "required": [
          "amount",
          "currency",
          "customer",
          "date",
          "id",
          "period",
          "quantity"
        ],
        "title": "InvoiceItem",
        "type": "object"
      },
      "base_customer": {
        "description": "This object represents a customer of your business.",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "The customer's address.",
            "nullable": true
          },
          "balance": {
            "type": "integer"
          },
          "created": {
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "nullable": true,
            "type": "string"
          },
          "delinquent": {
            "description": "Tracks the most recent state change on any invoice belonging to the customer.",
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "type": "string"
          },
          "email": {
            "description": "The customer's email address.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "invoice_prefix": {
            "description": "The prefix for the customer used to generate unique invoice numbers.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The customer's full name or business name.",
            "nullable": true,
            "type": "string"
          },
          "next_invoice_sequence": {
            "description": "The suffix of the customer's next invoice number (for example, 0001).",
            "type": "integer"
          },
          "phone": {
            "description": "The customer's phone number.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "id"
        ],
        "title": "Customer",
        "type": "object"
      },
      "base_payment_intent": {
        "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.",
        "properties": {
          "amount": {
            "description": "Amount intended to be collected by this PaymentIntent.",
            "type": "integer"
          },
          "amount_received": {
            "description": "Amount that this PaymentIntent collects.",
            "type": "integer"
          },
          "canceled_at": {
            "description": "Populated when `status` is `canceled`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "cancellation_reason": {
            "description": "Reason for cancellation of this PaymentIntent.",
            "enum": [
              "abandoned",
              "automatic",
              "duplicate",
              "failed_invoice",
              "fraudulent",
              "requested_by_customer",
              "void_invoice"
            ],
            "nullable": true,
            "type": "string"
          },
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "automatic_async",
              "manual"
            ],
            "type": "string"
          },
          "confirmation_method": {
            "description": "Confirm this PaymentIntent automatically, or if it requires customer action.",
            "enum": [
              "automatic",
              "manual"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code]",
            "format": "currency",
            "type": "string"
          },
          "customer": {
            "description": "ID of the Customer this PaymentIntent belongs to, if one exists.",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "invoice": {
            "description": "ID of the invoice that created this PaymentIntent, if it exists.",
            "type": "string"
          },
          "payment_method_types": {
            "description": "The list of payment method types this PaymentIntent is allowed to use.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "receipt_email": {
            "description": "Email address that the receipt for the resulting payment will be sent to.",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of this PaymentIntent.",
            "enum": [
              "canceled",
              "processing",
              "requires_action",
              "requires_capture",
              "requires_confirmation",
              "requires_payment_method",
              "succeeded"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "capture_method",
          "confirmation_method",
          "created",
          "currency",
          "id",
          "payment_method_types",
          "status"
        ],
        "title": "PaymentIntent",
        "type": "object"
      },      
      "base_subscription_schedule": {
        "description": "A subscription schedule allows you to create and manage the lifecycle of a subscription",
        "properties": {
          "canceled_at": {
            "description": "Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "completed_at": {
            "description": "Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "description": "ID of the customer who owns the subscription schedule.",
            "type": "string"
          },
          "default_settings": {
            "$ref": "#/components/schemas/subscription_default_settings"
          },
          "end_behavior": {
            "description": "Behavior of the subscription schedule and underlying subscription when it ends.",
            "enum": [
              "cancel",
              "none",
              "release",
              "renew"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "released_at": {
            "description": "Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "status": {
            "description": "The present status of the subscription schedule.",
            "enum": [
              "active",
              "canceled",
              "completed",
              "not_started",
              "released"
            ],
            "type": "string"
          }
        },
        "required": [
          "created",
          "customer",
          "default_settings",
          "end_behavior",
          "id",
          "status"
        ],
        "title": "SubscriptionSchedule",
        "type": "object"
      },
      "base_issuing_cardholder": {
        "description": "An object represents an individual or business entity who is issued cards",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/address"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "email": {
            "description": "The cardholder's email address.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "individual": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/individual"
              }
            ],
            "description": "Additional information about an `individual` cardholder.",
            "nullable": true
          },
          "name": {
            "description": "The cardholder's name. This will be printed on cards issued to them.",
            "type": "string"
          },
          "phone_number": {
            "description": "The cardholder's phone number.",
            "type": "string"
          },
          "status": {
            "description": "Specifies whether to permit authorizations on this cardholder's cards.",
            "enum": [
              "active",
              "blocked",
              "inactive"
            ],
            "type": "string"
          },
          "type": {
            "description": "One of `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "type": "string"          
          }
        },
        "required": [
          "billing",
          "created",
          "id",
          "name",
          "status",
          "type"
        ],
        "title": "IssuingCardholder",
        "type": "object"
      },
      "base_issuing_card": {
        "description": "You can create physical or virtual cards that are issued to cardholders.",
        "properties": {
          "brand": {
            "description": "The brand of the card.",
            "type": "string"
          },
          "cancellation_reason": {
            "description": "The reason why the card was canceled.",
            "enum": [
              "design_rejected",
              "lost",
              "stolen"
            ],
            "nullable": true,
            "type": "string"
          },
          "cardholder": {
            "description": "Cardholder id & email",
            "properties": {
              "email": {
                "description": "The cardholder's email address.",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "description": "The cardholder's unique identifier for the ",
                "type": "string"
              }
            },
            "title": "Cardholder",
            "type": "object"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter ISO currency code",
            "format": "currency",
            "type": "string"
          },
          "cvc": {
            "description": "The card's CVC.",
            "type": "string"
          },
          "exp_month": {
            "description": "The expiration month of the card.",
            "type": "integer"
          },
          "exp_year": {
            "description": "The expiration year of the card.",
            "type": "integer"
          },
          "financial_account": {
            "description": "The financial account this card is attached to.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "last4": {
            "description": "The last 4 digits of the card number.",
            "type": "string"
          },
          "status": {
            "description": "Whether authorizations can be approved on this card.",
            "enum": [
              "active",
              "canceled",
              "inactive"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of the card.",
            "enum": [
              "physical",
              "virtual"
            ],
            "type": "string"
          }        
        },
        "required": [
          "brand",
          "cardholder",
          "created",
          "currency",
          "exp_month",
          "exp_year",
          "id",
          "last4",
          "status",
          "type"
        ],
        "title": "IssuingCard",
        "type": "object"
      },
      "base_issuing_dispute": {
        "description": "As a card issuer, you can dispute transactions that the cardholder does not agree with.",
        "properties": {
          "amount": {
            "description": "Disputed amount in the card's currency",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The currency the `transaction` was made in.",
            "format": "currency",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "loss_reason": {
            "description": "The enum that describes the dispute loss outcome.",
            "enum": [
              "cardholder_authentication_issuer_liability",
              "eci5_token_transaction_with_tavv",
              "excess_disputes_in_timeframe",
              "has_not_met_the_minimum_dispute_amount_requirements",
              "invalid_duplicate_dispute",
              "invalid_incorrect_amount_dispute",
              "invalid_no_authorization",
              "invalid_use_of_disputes",
              "merchandise_delivered_or_shipped",
              "merchandise_or_service_as_described",
              "not_cancelled",
              "other",
              "refund_issued",
              "submitted_beyond_allowable_time_limit",
              "transaction_3ds_required",
              "transaction_approved_after_prior_fraud_dispute",
              "transaction_authorized",
              "transaction_electronically_read",
              "transaction_qualifies_for_visa_easy_payment_service",
              "transaction_unattended"
            ],
            "type": "string"
          },
          "reason": {
            "description": "The reason for filing the dispute. Its value will match the field containing the evidence.",
            "enum": [
              "canceled",
              "duplicate",
              "fraudulent",
              "merchandise_not_as_described",
              "no_valid_authorization",
              "not_received",
              "other",
              "service_not_as_described"
            ],
            "type": "string"
          },          
          "status": {
            "description": "Current status of the dispute.",
            "enum": [
              "expired",
              "lost",
              "submitted",
              "unsubmitted",
              "won"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "id",
          "reason",
          "status"
        ],
        "title": "IssuingDispute",
        "type": "object"
      },
      "base_issuing_authorization": {
        "description": "When an issued card is used to make a purchase, an Issuing `Authorization` object is created.",
        "properties": {
          "amount": {
            "description": "The total amount that was authorized or rejected.",
            "type": "integer"
          },
          "amount_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/amount_details"
              }
            ],
            "description": "Detailed breakdown of amount components.",
            "nullable": true
          },
          "approved": {
            "description": "Whether the authorization has been approved.",
            "type": "boolean"
          },
          "authorization_method": {
            "description": "How the card details were provided.",
            "enum": [
              "chip",
              "contactless",
              "keyed_in",
              "online",
              "swipe"
            ],
            "type": "string"
          },
          "card": {
            "description": "Id of the card,",
            "type": "string"
          },
          "cardholder": {
            "description": "The cardholder to whom this authorization belongs.",
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The currency of the cardholder.",
            "format": "currency",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "merchant_amount": {
            "description": "The total amount that was authorized or rejected in the `merchant_currency`.",
            "type": "integer"
          },
          "merchant_currency": {
            "description": "The local currency that was presented to the cardholder for the authorization.",
            "format": "currency",
            "type": "string"
          },
          "merchant_data": {
            "$ref": "#/components/schemas/merchant_data"
          },
          "status": {
            "description": "The current status of the authorization in its lifecycle.",
            "enum": [
              "closed",
              "pending",
              "reversed"
            ],
            "type": "string"
          },
          "wallet": {
            "description": "The digital wallet used for this transaction.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "approved",
          "authorization_method",
          "balance_transactions",
          "card",
          "created",
          "currency",
          "id",
          "merchant_amount",
          "merchant_currency",
          "merchant_data",
          "status"
        ],
        "title": "IssuingAuthorization",
        "type": "object"
      },      
      "base_topup": {
        "description": "To top up your Stripe balance, you create a top-up object.",
        "properties": {
          "amount": {
            "description": "Amount transferred.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter ISO currency code.",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "nullable": true,
            "type": "string"
          },
          "expected_availability_date": {
            "description": "Date the funds are expected to arrive in your Stripe account for payouts.",
            "nullable": true,
            "type": "integer"
          },
          "failure_code": {
            "description": "Error code explaining reason for top-up failure if available.",
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Message to user further explaining reason for top-up failure if available.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "status": {
            "description": "The status of the top-up.",
            "enum": [
              "canceled",
              "failed",
              "pending",
              "reversed",
              "succeeded"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "id",
          "status"
        ],
        "title": "Topup",
        "type": "object"
      },
      "individual": {
        "description": "",
        "properties": {
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/dob"
              }
            ],
            "description": "The date of birth of this cardholder.",
            "nullable": true
          },
          "first_name": {
            "description": "The first name of this cardholder. ",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "The last name of this cardholder.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Individual",
        "type": "object"
      },
      "address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City, district, suburb, town, or village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Address line 1 (e.g., street, PO Box, or company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State, county, province, or region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Address",
        "type": "object"
      },
      "dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "DateOfBirth",
        "type": "object"      
      },
      "line_item": {
        "type": "object",
        "properties": {
          "amount": {
            "description": "Amount for this line item",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code].",
            "format": "currency",
            "type": "string"
          },
          "description": {
            "description": "Description of the line item",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "description"
        ]
      },
      "subscription_default_settings": {
        "description": "",
        "properties": {
          "billing_cycle_anchor": {
            "description": "Possible values are `phase_start` or `automatic`.",
            "enum": [
              "automatic",
              "phase_start"
            ],
            "type": "string"
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "billing_cycle_anchor"
        ],
        "title": "SubscriptionDefaultSettings",
        "type": "object"      
      },
      "period": {
        "description": "",
        "properties": {
          "end": {
            "description": "The end of the period, which must be greater than or equal to the start.",
            "format": "unix-time",
            "type": "integer"
          },
          "start": {
            "description": "The start of the period. This value is inclusive.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "end",
          "start"
        ],
        "title": "Period",
        "type": "object"
      },
      "amount_details": {
        "description": "",
        "properties": {
          "atm_fee": {
            "description": "The fee charged by the ATM for the cash withdrawal.",
            "nullable": true,
            "type": "integer"
          },
          "cashback_amount": {
            "description": "The amount of cash requested by the cardholder.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "AmountDetails",
        "type": "object"
      },
      "merchant_data": {
        "description": "",
        "properties": {
          "category": {
            "description": "A categorization of the seller's type of business.",
            "type": "string"
          },
          "category_code": {
            "description": "The merchant category code for the seller’s business",
            "type": "string"
          },
          "city": {
            "description": "City where the seller is located",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country where the seller is located",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the seller",
            "nullable": true,
            "type": "string"
          },
          "network_id": {
            "description": "Identifier assigned to the seller by the card network.",
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code where the seller is located",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State where the seller is located",
            "nullable": true,
            "type": "string"
          },
          "tax_id": {
            "description": "The seller's tax identification number.",
            "nullable": true,
            "type": "string"
          },
          "terminal_id": {
            "description": "An ID assigned by the seller to the location of the sale.",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "URL provided by the merchant on a 3DS request",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "category",
          "category_code",
          "network_id"
        ],
        "title": "MerchantData",
        "type": "object"
      }      
    }
  }
}